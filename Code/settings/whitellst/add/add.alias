multiline
<drac2>
# *******************************************************
# * This work includes material written by Seth Hartman (aka ShadowsStride)
# * and is licensed under the Creative Commons Attribution 4.0 International License 
# * available at https://creativecommons.org/licenses/by/4.0/legalcode.
# *******************************************************


def search_list(query: str, item_list: list[str]) -> list[str]|None:
    """
    Searches for item in list.

    Args:
        query (str): The query being made
        item_list (list): List of items

    Return:
        list[str]|None: If it finds at least one match, it returns the item(s) in a list, otherwise it returns None
    """

    # Finds at least 1 match
    if len(item_results := [item for item in item_list if query.lower() in str(item).lower()]) > 0:
        return item_results

    # If it finds no matches
    else:
        return None


def main(input_list: list[str]) -> tuple(str, str):
    """
    Main program function

    Args:
        input_list (list[str]): List of user inputs

    Return:
        str: Embed string
        str: SVAR string
    """

    # Collect prefix, date, server_id, and subalias string
    prefix = ctx.prefix
    date = "3/1/24"
    server_id = ctx.guild.id
    subalias_str = f"{prefix}tame settings whitelist add [channel id]"

    # If SVAR exists, load dictionary
    if (svar_test := get_svar("tame_settings")):
        svar_dict = load_json(svar_test)

        # If settings exists
        if "settings" in svar_dict.keys():

            # If whitelisted channel ids exists
            if "whitelisted_channel_ids" in svar_dict["settings"].keys():
                pass

            # If whitelisted channel ids does not exist
            else:
                svar_dict["settings"]["whitelisted_channel_ids"] = []

        # If settings does not exist
        else:
            svar_dict["settings"] = {
                "whitelisted_channel_ids": []
            }

    # If SVAR does not exist
    else:
        svar_dict = {
            "creatures": {},
            "settings": {
                "whitelisted_channel_ids": []
            }
        }

    # If at least one input was given
    if len(input_list) > 0:

        # Check to see if first input was a number
        try:

            # If channel id not already in list, add to list and sort
            if not (channel_id := int(input_list[0])) in svar_dict["settings"]["whitelisted_channel_ids"]:
                svar_dict["settings"]["whitelisted_channel_ids"].append(channel_id)
                svar_dict["settings"]["whitelisted_channel_ids"].sort()

            # If channel id already in list
            else:
                return f"{prefix}embed -title 'You Have Been Sneak Attacked by an Error' -f 'Channel ID already exists' -color '#CF142B' -thumb 'https://raw.githubusercontent.com/Shadow-Draconic-Development/Avrae-Customizable-Tamecraft/main/Data/error.png' -footer '{subalias_str} | {date} | ShadowsStride'", ""

        # If first input was not a number
        except:
            return f"{prefix}embed -title 'You Have Been Sneak Attacked by an Error' -f 'Channel ID must be a number' -color '#CF142B' -thumb 'https://raw.githubusercontent.com/Shadow-Draconic-Development/Avrae-Customizable-Tamecraft/main/Data/error.png' -footer '{subalias_str} | {date} | ShadowsStride'", ""

        # Construct output
        f_list = ["**Added Channel:**", f"https://discord.com/channels/{server_id}/{input_list[0]}: {input_list[0]}", "\n**Current Channels:**"] + [f"https://discord.com/channels/{server_id}/{channel}: {channel}" for channel in svar_dict["settings"]["whitelisted_channel_ids"]]

        return f"{prefix}embed -title 'Taming Settings: Whitelisted Channel IDs' -f '" + "\n".join(f_list) + f"' -thumb 'https://raw.githubusercontent.com/Shadow-Draconic-Development/Avrae-Customizable-Tamecraft/main/Data/main.png' -footer '{subalias_str} | {date} | ShadowsStride'", f"{prefix}svar tame_settings {dump_json(svar_dict).replace(' ', '')}"

    # If no inputs were given
    else:
        return f"{prefix}embed -title 'You Have Been Sneak Attacked by an Error' -f 'Expected channel ID' -color '#CF142B' -thumb 'https://raw.githubusercontent.com/Shadow-Draconic-Development/Avrae-Customizable-Tamecraft/main/Data/error.png' -footer '{subalias_str} | {date} | ShadowsStride'", ""


embed_str, svar_str = main(&ARGS&)


</drac2>
{{embed_str}}
{{svar_str}}