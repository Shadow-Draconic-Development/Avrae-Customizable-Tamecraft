embed
<drac2>
# *******************************************************
# * This work includes material written by Seth Hartman (aka ShadowsStride)
# * and is licensed under the Creative Commons Attribution 4.0 International License 
# * available at https://creativecommons.org/licenses/by/4.0/legalcode.
# *******************************************************


def search_list(query: str, item_list: list[str]) -> list[str]|None:
    """
    Searches for item in list.

    Args:
        query (str): The query being made
        item_list (list): List of items

    Return:
        list[str]|None: If it finds at least one match, it returns the item(s) in a list, otherwise it returns None
    """

    # Finds at least 1 match
    if len(item_results := [item for item in item_list if query.lower() in str(item).lower()]) > 0:
        return item_results

    # If it finds no matches
    else:
        return None


def main() -> tuple(str, str, str):
    """
    Main program function

    Args:
        input_list (list[str]): List of user inputs

    Return:
        str: Title
        str: Body content
        str: Color hex code
    """

    # Set default value
    default_value = [
        "animalHandling",
        "sleightOfHand",
        "nature",
        "survival"
    ]

    # Grab title name
    title = "Taming Settings: Valid Skills"

    # If SVAR settings exists, load dictionary
    if (svar_test := get_svar("tame_settings")):
        svar_dict = load_json(svar_test)

        # If settings exists
        if "settings" in svar_dict.keys():

            # If key exists
            if "skills" in svar_dict["settings"].keys():
                pass

            # If key does not exist
            else:
                svar_dict["settings"]["skills"] = default_value

        # If settings does not exist
        else:
            svar_dict["settings"] = {
                "skills": default_value
            }

    # If SVAR settings does not exist, load default dictionary
    else:
        svar_dict = {
            "creatures": {},
            "settings": {
                "skills": default_value
            }
        }

    skills_colors = {
    # Strength Skills
    "strength": "#FF0000", # Red
    "athletics": "#DC143C",  # Crimson

    # Dexterity Skills
    "dexterity": "#FFA500", # Orange
    "acrobatics": "#FFBF00",  # Amber
    "sleightOfHand": "#F3B300",  # Xanthous
    "stealth": "#CC8F00",  # Harvest Gold

    # Constitution Skills
    "constitution": "#8F00FF",  # Violet

    # Intelligence Skills
    "intelligence": "#0000FF", # Blue
    "arcana": "#2341DA",  # Palatinate Blue 
    "history": "#3562C7",  # True Blue
    "investigation": "#3E72BE",  # Celtic Blue
    "nature": "#4682B4",  # Steel Blue
    "religion": "#1E90FF",  # Dodger Blue

    # Wisdom Skills
    "wisdom": "#00FF00", # Green
    "animalHandling": "#00D900",  # SGBUS Green
    "insight": "#00B200",  # Kelly Green
    "medicine": "#009F00",  # Forest Green
    "perception": "#008B00",  # India Green
    "survival": "#006400",  # Office Green

    # Charisma Skills
    "charisma": "#FFFF00", # Yellow
    "deception": "#B89C00",  # Satin Sheen Gold
    "intimidation": "#EED000",  # Citrine
    "performance": "#FFE100",  # School Bus Yellow
    "persuasion": "#FFEB00"  # Canary
    }

    skill_mapping = {
    # Strength Skills
    "strength": "Strength",
    "athletics": "Athletics",

    # Dexterity Skills
    "dexterity": "Dexterity",
    "acrobatics": "Acrobatics",
    "sleightOfHand": "Sleight of Hand",
    "stealth": "Stealth",

    # Constitution Skills
    "constitution": "Constitution",

    # Intelligence Skills
    "intelligence": "Intelligence",
    "arcana": "Arcana",
    "history": "History",
    "investigation": "Investigation",
    "nature": "Nature",
    "religion": "Religion",

    # Wisdom Skills
    "wisdom": "Wisdom",
    "animalHandling": "Animal Handling",
    "insight": "Insight",
    "medicine": "Medicine",
    "perception": "Perception",
    "survival": "Survival",

    # Charisma Skills
    "charisma": "Charisma",
    "deception": "Deception",
    "intimidation": "Intimidation",
    "performance": "Performance",
    "persuasion": "Persuasion"
    }

    # If there is at least one skill in list
    if len(svar_dict["settings"]["skills"]) > 0:

        # If random skill name is found
        if (search_result := search_list(randchoice(svar_dict["settings"]["skills"]), skills_colors.keys())):
            color = skills_colors[search_result[0]]

        # If random skill name is not found
        else:
            color = ""

        # Construct skill string
        skill_str = "\n".join([skill_mapping[skill] for skill in svar_dict["settings"]["skills"]])

    # If there are no skills listed, collect random color and construct skill string
    else:
        color = skills_colors[randchoice(list(skills_colors.keys()))]
        skill_str = "All skills"

    # Sort default values
    default_value.sort()

    return title, "\n".join(["**Current Skills:**", skill_str, "\n**Default Skills:**", "\n".join([skill_mapping[skill] for skill in default_value])]), color


# Main program function
title, f, color = main()


</drac2>
-title "{{title}}"
-f "{{f}}"
-color "{{color}}"
-thumb "https://raw.githubusercontent.com/Shadow-Draconic-Development/Avrae-Customizable-Tamecraft/main/Data/main.png"
-footer "{{ctx.prefix}}tame settings skills | 3/1/24 | ShadowsStride"