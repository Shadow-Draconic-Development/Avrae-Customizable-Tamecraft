embed
<drac2>
# *******************************************************
# * This work includes material written by Seth Hartman (aka ShadowsStride)
# * and is licensed under the Creative Commons Attribution 4.0 International License 
# * available at https://creativecommons.org/licenses/by/4.0/legalcode.
# *******************************************************


def compile_output(page_num: int, creature_list: list[str]) -> tuple(list[str], int, int):
    """
    Compiles list of creatures from creature list

    Args:
        page_num (int): Page number
        creature_list (list[str]): List of creatures from creature

    Return:
        list[str]: List of creature names
        int: Page number
        int: # of pages
    """

    # Prepare container
    output_list = [["**Creatures:**"], []]
    i = 1
    found = False
    char_limit = 350

    # For each item in creature list
    for item in creature_list:

        # If not found
        if not found:

            # If length of current list is less than limit
            if len("\n".join(output_list[i]) + f"\n{item}") <= char_limit:
                output_list[i].append(item)

            # If length of current list is greater than limit
            else:
                i += 1
                output_list.append([item])

                # Check to see page_num is found
                try:
                    output_list[page_num]
                    found = True

                # Page number is not found
                except:
                    pass

        # If found
        else:

            # If length of current list is less than limit
            if len("\n".join(output_list[i]) + f"\n{item}") <= char_limit:
                output_list[i].append(item)

            # If length of current list is greater than limit
            else:
                return output_list[0] + output_list[i], i, ceil((len("\n\n".join(creature_list)) + len(output_list[0]) + 2) / char_limit)

    return output_list[0] + output_list[-1], i, i


def main(input_list: list[str]) -> tuple(str, str, str, str):
    """
    Main program function
    
    Return:
        str: Title
        str: Body content
        str: Image URL
        str: Color hex code
    """

    if len(input_list) == 0:
        input_list.append(1)


    # If SVAR eixsts, load dictionary
    if (svar_test := get_svar("tame_settings")):
        svar_dict = load_json(svar_test)

        # If creatures in SVAR
        if "creatures" in svar_dict.keys():
            
            # If at least 1 creature in SVAR
            if len(svar_dict["creatures"]) > 0:

                try:
                    output_list, page_num, pages_num = compile_output(int(input_list[0]), svar_dict["creatures"])

                except:
                    return "You Have Been Sneak Attacked by an Error", "Invalid input", "https://raw.githubusercontent.com/Shadow-Draconic-Development/Avrae-Customizable-Tamecraft/main/Data/error.png", "#CF142B"

                # Construct output string
                output_str = "\n".join([f"**Page {page_num}/{pages_num}**\n"] + output_list)

                # Color list storage
                color_list = []

                # For each creature in SVAR
                for creature in output_list[1:]:

                    # If color in SVAR
                    if "color" in svar_dict["creatures"][creature].keys():
                        color_list.append(svar_dict["creatures"][creature]["color"])

                # If at least 1 color was pulled
                if len(color_list) > 0:
                    color = randchoice(color_list)

                # If no colors were pulled
                else:
                    color = ""

                return "Current Tamable Creatures", output_str, "https://raw.githubusercontent.com/Shadow-Draconic-Development/Avrae-Customizable-Tamecraft/main/Data/main.png", color

            # If no creatures in SVAR
            else:
                return "Current Tamable Creatures", "None", "https://raw.githubusercontent.com/Shadow-Draconic-Development/Avrae-Customizable-Tamecraft/main/Data/main.png", ""

        # If creatures not in SVAR
        else:
            return "Current Tamable Creatures", "None", "https://raw.githubusercontent.com/Shadow-Draconic-Development/Avrae-Customizable-Tamecraft/main/Data/main.png", ""

    # If SVAR does not exist
    else:
        return "Current Tamable Creatures", "None", "https://raw.githubusercontent.com/Shadow-Draconic-Development/Avrae-Customizable-Tamecraft/main/Data/main.png", ""


# Main program function
title, f, thumb, color = main(&ARGS&)
l = "<"


</drac2>
-title "{{title}}"
-f "{{f}}"
-thumb "{{thumb}}"
-color "{{color}}"
-footer "{{ctx.prefix}}tame list {{l}}#>  | 3/5/24 | ShadowsStride"